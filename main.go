package main

import (
	"fmt"
	"os"
)

func main() {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è broadcast –ø—Ä–∏–º–µ—Ä–æ–≤
	if len(os.Args) > 1 && os.Args[1] == "broadcast" {
		// –ó–∞–ø—É—Å–∫–∞–µ–º broadcast –ø—Ä–∏–º–µ—Ä—ã
		mainBroadcast()
		return
	}

	fmt.Println("üöÄ Go Secrets - –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ–ª–µ–∑–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏ –ø—Ä–∏–º–µ—Ä–æ–≤ Go")
	fmt.Println("===========================================================")

	fmt.Println("\nüì¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:")
	fmt.Println("1. Broadcast –≤–µ—â–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –∫–∞–Ω–∞–ª–æ–≤")
	fmt.Println("   –ó–∞–ø—É—Å–∫: go run *.go broadcast [—Ç–∏–ø]")
	fmt.Println("   –¢–∏–ø—ã: simple, cond, typed –∏–ª–∏ –ø—É—Å—Ç–æ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤")

	fmt.Println("\nüí° –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
	fmt.Println("   go run *.go broadcast        # –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã broadcast")
	fmt.Println("   go run *.go broadcast simple # –ü—Ä–æ—Å—Ç–æ–π broadcaster")
	fmt.Println("   go run *.go broadcast cond   # Broadcaster —Å sync.Cond")
	fmt.Println("   go run *.go broadcast typed  # –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π broadcaster")

	fmt.Println("\n‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É!")
}
